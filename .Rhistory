dat.select <- 1:20
grid <- expand.grid(dat.select=dat.select)
dat.num <- grid[whichRep,"dat.select"]
####
HS <- HolzingerSwineford1939[complete.cases(HolzingerSwineford1939),-c(1,4)]
names(HS)[3] <- "y"
HS$y <- as.factor(HS$y)
HS$sex <- as.factor(HS$sex)
HS$ageyr <- as.factor(HS$ageyr)
HS$grade <- as.factor(HS$grade)
HS[,5:13] <- round(HS[,5:13],1)
levels(HS$y) <- c("GW","P")
####
FB2 <- FacialBurns[,-c(2)]
names(FB2)[1] <- "y"
FB2$Sex <- as.factor(FB2$Sex)
#####
bfi2 <- bfi[complete.cases(bfi),-c(27:28)]
bfi2$gender <- as.factor(bfi2$gender)
names(bfi2)[26] <- "y"
levels(bfi2$y) <- c("M","F")
#####
eb2 <- epi.bfi[,1:11]
names(eb2)[11] <- "y"
#####
names(crabs)[1] <- "y"
crabs2 <- crabs[,-c(2,3)]
#####
names(Wage)[11] <- "y"
Wage2 <- Wage[1:1000,-10]
#####
names(cats)[1] <- "y"
#####
Cars932 <- Cars93[complete.cases(Cars93),-c(1,2,27)]
# predict origin
names(Cars932)[24] <- "y"
levels(Cars932$y) <- c("USA","nUSA")
######
Boston$chas <- as.factor(Boston$chas)
names(Boston)[14] <- "y"
######
birthwt2 <- birthwt[,-10]
birthwt2$low <- as.factor(birthwt2$low)
names(birthwt2)[1] <- "y"
birthwt2$ptl<- as.factor(birthwt2$ptl)
birthwt2$ht <- as.factor(birthwt2$ht)
birthwt2$ui <- as.factor(birthwt2$ui)
birthwt2$ftv <- as.factor(birthwt2$ftv)
levels(birthwt2$y) <- c("low","high")
######
biopsy2 <- biopsy[complete.cases(biopsy),-c(1)]
names(biopsy2)[10] <- "y"
#levels(biopsy2$y) <- c("1","2")
######
names(College)[2] <- "y" #Apps
College2 <- College[,-c(11:17)]
#####
names(quine)[5] <- "y"
#####
names(Pima.tr)[8] <- "y"
#####
OME2 <- OME[,-1]
OME2$y <- OME2$Correct/OME2$Trials
OME3 <- OME2[,-c(5:6)]
#####
nlschools2 <- nlschools[1:1000,-3]
names(nlschools2)[1] <- "y"
str(nlschools2)
#####
names(minn38)[2] <- "y"
minn382 <- minn38[,-5]
levels(minn382$y) <- c("C","N","N","N")
#####
names(swiss)[1] <- "y" #fertility
######
names(Default)[1] <- "y"
Default2 <- Default[1:2000,]
#####
data(Sacramento)
names(Sacramento)[7] <- "y"
Sacramento2 <- Sacramento[,-c(1,2,8:9)]
Sacramento2$y <- round(Sacramento2$y,-4)
Sacramento2$sqft <- round(Sacramento2$sqft,-2)
############ data
dat.list <- list(HS,FB2,bfi2,crabs2,eb2,Wage2,cats,Cars932,Boston,
birthwt2,biopsy2,College,quine,Pima.tr,OME3,nlschools2,minn382,
swiss,Default2,Sacramento2)
# problems with nlschools, error with minn382
res.out <- list()
for(i in 1:5){
dat.num=i
res.out[[i]] <- stable(y~., dat.list[[dat.num]],
methods=c("rpart","ctreePrune","ctree","evtree"),n.rep=1,
samp.method="cv",tuneLength=c(15,3,3,3))
print(i)
}
for(i in 1:5){
dat.num=i
res.out[[i]] <- stable(y~., dat.list[[dat.num]],
methods=c("rpart","ctreePrune","ctree","evtree"),n.rep=2,
samp.method="cv",tuneLength=c(15,3,3,3))
print(i)
}
res.out
i=4
res.out[[i]] <- stable(y~., dat.list[[dat.num]],
methods=c("rpart"),n.rep=2,
samp.method="cv",tuneLength=c(5))
res.out
# problems with nlschools, error with minn382
res.out <- list()
res.out[[i]] <- stable(y~., dat.list[[dat.num]],
methods=c("rpart"),n.rep=2,
samp.method="cv",tuneLength=c(5))
res.out
# problems with nlschools, error with minn382
res.out <- list()
i=3
res.out[[i]] <- stable(y~., dat.list[[dat.num]],
methods=c("rpart"),n.rep=2,
samp.method="cv",tuneLength=c(5))
res.out
i
# problems with nlschools, error with minn382
res.out <- list()
dat.num=i
res.out[[i]] <- stable(y~., dat.list[[dat.num]],
methods=c("rpart"),n.rep=2,
samp.method="cv",tuneLength=c(5))
res.out
tt <- dtree(y~., dat.list[[dat.num]],
methods=c("rpart"),#n.rep=2,
samp.method="cv",tuneLength=c(5))
tt
library(pROC)
tt <- dtree(y~., dat.list[[dat.num]],
methods=c("rpart"),#n.rep=2,
samp.method="cv",tuneLength=c(5))
tt
library(dtree)
tt <- dtree(y~., dat.list[[dat.num]],
methods=c("rpart"),#n.rep=2,
samp.method="cv",tuneLength=c(5))
tt <- dtree(y~., dat.list[[dat.num]],
methods=c("rpart"),#n.rep=2,
samp.method="cv",tuneLength=c(5))
library(dtree)
tt <- dtree(y~., dat.list[[dat.num]],
methods=c("rpart"),#n.rep=2,
samp.method="cv",tuneLength=c(5))
tt <- dtree(y~., dat.list[[dat.num]],
methods=c("rpart"),#n.rep=2,
samp.method="cv",tuneLength=c(5))
library(dtree)
library(dtree)
library(dtree)
tt <- dtree(y~., dat.list[[dat.num]],
methods=c("rpart"),#n.rep=2,
samp.method="cv",tuneLength=c(5))
library(dtree)
tt <- dtree(y~., dat.list[[dat.num]],
methods=c("rpart"),#n.rep=2,
samp.method="cv",tuneLength=c(5))
library(ISLR)
data(Default)
#'
out <- dtree(default ~ ., data=Default,methods=c("lm","rpart"))
str(Default)
library(dtree)
#'
out <- dtree(default ~ ., data=Default,methods=c("lm","rpart"))
summary(out)
library(dtree)
#'
out <- dtree(default ~ ., data=Default,methods=c("rpart"))
summary(out)
library(dtree)
library(dtree)
#'
out <- dtree(default ~ ., data=Default,methods=c("rpart"))
summary(out)
?evtree
library(dtree)
library(dtree)
#'
out <- dtree(default ~ ., data=Default[1:100,],methods=c("evtree"),tuneLength=1)
library(dtree)
#'
out <- dtree(default ~ ., data=Default[1:100,],methods=c("evtree"),tuneLength=1)
library(dtree)
library(dtree)
#'
out <- dtree(default ~ ., data=Default[1:100,],methods=c("evtree"),tuneLength=1)
#'
out <- dtree(default ~ ., data=Default[1:300,],methods=c("evtree"),tuneLength=1)
library(dtree)
#'
out <- dtree(default ~ ., data=Default[1:300,],methods=c("evtree"),tuneLength=1)
summary(out)
?predict.evtree
library(dtree)
#'
out <- dtree(default ~ ., data=Default[1:300,],methods=c("evtree"),tuneLength=1)
library(dtree)
#'
out <- dtree(default ~ ., data=Default[1:300,],methods=c("evtree"),tuneLength=1)
?colMeans
t = cbind(c(1,2,3),c(1,NA,3))
max(colMeans(t))
max(colMeans(t,na.rm=T))
library(dtree)
#'
out <- dtree(default ~ ., data=Default[1:300,],methods=c("evtree"),tuneLength=1)
summary(out)
plot(out$evtree.out)
tt <- dtree(y~., dat.list[[dat.num]],
methods=c("rpart","ctree","ctreePrune","evtree"),#n.rep=2,
samp.method="cv",tuneLength=c(5,3,3,1))
library(dtree)
library(dtree)
rm(list=ls())
library(MASS);library(lavaan);library(psych);library(ISLR);library(dtree);library(rpart.utils)
whichRep <- as.numeric(Sys.getenv("SGE_TASK_ID"))
nSlots <- as.numeric(Sys.getenv("NSLOTS"))
if(is.na(whichRep)) whichRep <- 1
library(parallel)
library(regsem)
dat.select <- 1:20
grid <- expand.grid(dat.select=dat.select)
dat.num <- grid[whichRep,"dat.select"]
####
HS <- HolzingerSwineford1939[complete.cases(HolzingerSwineford1939),-c(1,4)]
names(HS)[3] <- "y"
HS$y <- as.factor(HS$y)
HS$sex <- as.factor(HS$sex)
HS$ageyr <- as.factor(HS$ageyr)
HS$grade <- as.factor(HS$grade)
HS[,5:13] <- round(HS[,5:13],1)
levels(HS$y) <- c("GW","P")
####
FB2 <- FacialBurns[,-c(2)]
names(FB2)[1] <- "y"
FB2$Sex <- as.factor(FB2$Sex)
#####
bfi2 <- bfi[complete.cases(bfi),-c(27:28)]
bfi2$gender <- as.factor(bfi2$gender)
names(bfi2)[26] <- "y"
levels(bfi2$y) <- c("M","F")
#####
eb2 <- epi.bfi[,1:11]
names(eb2)[11] <- "y"
#####
names(crabs)[1] <- "y"
crabs2 <- crabs[,-c(2,3)]
#####
names(Wage)[11] <- "y"
Wage2 <- Wage[1:1000,-10]
#####
names(cats)[1] <- "y"
#####
Cars932 <- Cars93[complete.cases(Cars93),-c(1,2,27)]
# predict origin
names(Cars932)[24] <- "y"
levels(Cars932$y) <- c("USA","nUSA")
######
Boston$chas <- as.factor(Boston$chas)
names(Boston)[14] <- "y"
######
birthwt2 <- birthwt[,-10]
birthwt2$low <- as.factor(birthwt2$low)
names(birthwt2)[1] <- "y"
birthwt2$ptl<- as.factor(birthwt2$ptl)
birthwt2$ht <- as.factor(birthwt2$ht)
birthwt2$ui <- as.factor(birthwt2$ui)
birthwt2$ftv <- as.factor(birthwt2$ftv)
levels(birthwt2$y) <- c("low","high")
######
biopsy2 <- biopsy[complete.cases(biopsy),-c(1)]
names(biopsy2)[10] <- "y"
#levels(biopsy2$y) <- c("1","2")
######
names(College)[2] <- "y" #Apps
College2 <- College[,-c(11:17)]
#####
names(quine)[5] <- "y"
#####
names(Pima.tr)[8] <- "y"
#####
OME2 <- OME[,-1]
OME2$y <- OME2$Correct/OME2$Trials
OME3 <- OME2[,-c(5:6)]
#####
nlschools2 <- nlschools[1:1000,-3]
names(nlschools2)[1] <- "y"
str(nlschools2)
#####
names(minn38)[2] <- "y"
minn382 <- minn38[,-5]
levels(minn382$y) <- c("C","N","N","N")
#####
names(swiss)[1] <- "y" #fertility
######
names(Default)[1] <- "y"
Default2 <- Default[1:2000,]
#####
data(Sacramento)
names(Sacramento)[7] <- "y"
Sacramento2 <- Sacramento[,-c(1,2,8:9)]
Sacramento2$y <- round(Sacramento2$y,-4)
Sacramento2$sqft <- round(Sacramento2$sqft,-2)
############ data
dat.list <- list(HS,FB2,bfi2,crabs2,eb2,Wage2,cats,Cars932,Boston,
birthwt2,biopsy2,College,quine,Pima.tr,OME3,nlschools2,minn382,
swiss,Default2,Sacramento2)
# problems with nlschools, error with minn382
res.out <- list()
for(i in 1:20){
dat.num=i
res.out[[i]] <- stable(y~., dat.list[[dat.num]],
methods=c("rpart","ctreePrune","ctree","evtree"),n.rep=100,
samp.method="cv",tuneLength=c(15,3,3,3),parallel=TRUE,ncore=8)
print(i)
}
# problems with nlschools, error with minn382
res.out <- list()
for(i in 1:20){
dat.num=i
res.out[[i]] <- stable(y~., dat.list[[dat.num]],
methods=c("rpart","ctreePrune","ctree"),n.rep=100,
samp.method="cv",tuneLength=c(15,3,3),parallel=TRUE,ncore=8)
print(i)
}
setwd("C:/Users/rjacobuc/Documents/GitHub/dtree_paper1")
saveRDS(res.out,file = "output2.rds")
library(MASS) # for boston data
data(Boston)
stab.out <- stable(formula=medv ~.,data=Boston,
methods=c("evtree"),samp.method="cv",
tuneLength=1, n.rep=5, parallel=FALSE)
stab.out <- stable(formula=medv ~.,data=Boston[1:100,],
methods=c("evtree"),samp.method="cv",
tuneLength=1, n.rep=5, parallel=FALSE)
traceback()
dt.out <- dtree(formula=medv ~.,data=Boston[1:100,],
methods=c("evtree"),samp.method="cv",
tuneLength=1,  parallel=FALSE)
dt.out <- dtree(formula=medv ~.,data=Boston[1:100,],
methods=c("evtree"),samp.method="cv",
tuneLength=1)
library(dtree)
dt.out <- dtree(formula=medv ~.,data=Boston[1:100,],
methods=c("evtree"),samp.method="cv",
tuneLength=1)
dt.out
stab.out <- stable(formula=medv ~.,data=Boston[1:100,],
methods=c("evtree"),samp.method="cv",
tuneLength=1, n.rep=5, parallel=FALSE)
stab.out
education <- rnorm(200,mean=12)
age <- rnorm(200,mean=65)
cog.stat <- rep(0,200)
cog.stat[age>65] <- 0
cog.stat[age <= 65 & education > 12] <- 1
data <- data.frame(education,age,cog.stat)
attach(data)
library(rpart)
out <- rpart(cog.stat ~ ., data)
rpart.plot
library(rpart.plot)
rpart.plot
rpart.plot(out)
rpart.plot(out,box.palette="white")
install.packages("evtree")
install.packages("partykit")
install.packages("partykit")
library(dtree)
install.packages("tree")
install.packages("clusteval")
install.packages("rpart.utils")
install.packages("pROC")
library(dtree)
?stable
data(Boston)
library(MASS)
data(Boston)
stab.out <- stable(formula=medv ~.,data=Boston[1:100,],
methods=c("rpart","ctree","evtree","ctreePrune"),samp.method="cv",
tuneLength=1, n.rep=5, parallel=TRUE)
stab.out
stab.out <- stable(formula=medv ~.,data=Boston[1:100,],
methods=c("rpart","ctree","evtree","ctreePrune"),samp.method="cv",
tuneLength=2, n.rep=5, parallel=TRUE)
stab.out
library(dtree)
dt.out <- dtree(formula=medv ~.,data=Boston[1:100,],
methods=c("ctreePrune"))
dt.out
library(dtree)
dt.out <- dtree(formula=medv ~.,data=Boston[1:100,],
methods=c("ctreePrune"))
library(dtree)
dt.out <- dtree(formula=medv ~.,data=Boston[1:100,],
methods=c("ctreePrune"))
?colMeans
library(dtree)
dt.out <- dtree(formula=medv ~.,data=Boston[1:100,],
methods=c("ctreePrune"))
dt.out
library(dtree)
dt.out <- dtree(formula=medv ~.,data=Boston[1:100,],
methods=c("ctreePrune"))
library(dtree)
dt.out <- dtree(formula=medv ~.,data=Boston[1:100,],
methods=c("ctreePrune"))
dt.out
library(dtree)
dt.out <- dtree(formula=medv ~.,data=Boston[1:100,],
methods=c("ctreePrune"))
dt.out
library(dtree)
library(dtree)
library(dtree)
library(dtree)
library(MASS)
data(Boston)
stab.out <- stable(formula=medv ~.,data=Boston[1:100,],
methods=c("rpart","ctree","evtree","ctreePrune"),samp.method="cv",
tuneLength=2, n.rep=5, parallel=TRUE)
stab.out <- stable(formula=medv ~.,data=Boston[1:100,],
methods=c("rpart","ctree","evtree","ctreePrune"),samp.method="cv",
tuneLength=1, n.rep=5, parallel=TRUE)
stab.out
dt.out <- dtree(formula=medv ~.,data=Boston[1:100,],
methods=c("ctreePrune"))
dt.out
stab.out <- stable(formula=medv ~.,data=Boston[1:100,],
methods=c("rpart","ctree","evtree","ctreePrune"),samp.method="cv",
tuneLength=1, n.rep=20, parallel=TRUE)
stab.out
library(dtree)
stab.out <- stable(formula=medv ~.,data=Boston[1:100,],
methods=c("rpart","ctree","evtree","ctreePrune"),samp.method="cv",
tuneLength=1, n.rep=20, parallel=TRUE)
stab.out
stab.out <- stable(formula=medv ~.,data=Boston[1:100,],
methods=c("rpart","ctree","evtree","ctreePrune"),samp.method="cv",
tuneLength=c(15,1,1,1), n.rep=20, parallel=TRUE)
stab.out
?trainControl
setwd("C:/Users/rjacobuc/Desktop")
library(foreign)
dat <- read.spss("36361-0001-Data.sav",to.data.frame=TRUE,use.value.labels=FALSE,reencode=FALSE)
library(dtree)
vars <- c("ADWRDEPR","ADWRDISC","ADWRLSIN","ADWRPLSR","ADWRELES","ADWREMOR","ADWRGAIN",
"ADWRGROW","ADWRPREG","ADWRLOSE","ADWRDIET","ADWRSLEP","ADWRSMOR","ADWRENRG",
"ADWRSLOW","ADWRSLNO","ADWRJITT","ADWRJINO","ADWRTHOT","ADWRCONC","ADWRDCSN",
"ADWRNOGD","ADWRWRTH","ADPBINTF","ADRXHLP","ADTMTHLP","ADPBDLYA","ATXMDEYR","ARXMDEYR",
"AMDETXRX","ADOCMDE","AOMDMDE","APSY1MDE","ASOCMDE","ACOUNMDE","AOMHMDE","ANURSMDE","ARELMDE",
"AHBCHMDE","IRSEX","IRMARIT","CATAG6","NEWRACE2","SUICTHNK")
dat.sub <- dat[,vars]
#library(stringr)
#dat[,str_detect(colnames(dat), "SUI")]
# remove those with missing on suicide
dat.sub2 <- dat.sub[is.na(dat.sub$SUICTHNK)==FALSE & dat.sub$CATAG6 !=1,]
library(psych)
race <- dummy.code(dat.sub2$NEWRACE2)
race2 <- race[,2:7] # white as reference
colnames(race2) <- c("black","native","pac","asian","multi","hisp")
dat.sub3 <- data.frame(dat.sub2[,-43],race2)
dat.sub3$SUICTHNK <- (dat.sub3$SUICTHNK*-1)+2
# dummy code marriage
marr <- dummy.code(dat.sub3$IRMARIT)
marr2 <- marr[,2:4] # married as reference
colnames(marr2) <- c("marr2","marr3","marr4")
dat.sub4 <- data.frame(dat.sub3[,-41],marr2)
# dummy code cat -- age
catt <- dummy.code(dat.sub4$CATAG6)
catt2 <- catt[,2:5] # 12-17 as reference
colnames(catt2) <- c("age2","age3","age4","age5")
dat.sub5 <- data.frame(dat.sub4[,-41],catt2)
# recode missingness
dat.sub5$ADPBINTF[is.na(dat.sub5$ADPBINTF)] <- 0
dat.sub5$ADRXHLP[is.na(dat.sub5$ADRXHLP)] <- 0
dat.sub5$ADTMTHLP[is.na(dat.sub5$ADTMTHLP)] <- 0
dat.sub5$ADPBDLYA[is.na(dat.sub5$ADPBDLYA)] <- 5
dat.sub5[,1:23][is.na(dat.sub5[,1:23])] <- 2
dat.sub5[is.na(dat.sub5)] <- 0
# select for suicide to increase proportion
sel1 = which(dat.sub5$SUICTHNK == 1)
sel0 = which(dat.sub5$SUICTHNK == 0)
set.seed(1)
ids11 <- sample(sel1,1000)
ids10 <- sample(sel0,1000)
dat.sub11 <- dat.sub5[ids11,]
dat.sub10 <- dat.sub5[ids10,]
dat2000 <- rbind(dat.sub11,dat.sub10)
# recode variables
dat2000[,1:23] <- dat2000[,1:23] - 1
dat2000[,24:27] <- data.frame(scale(dat2000[,24:27]))
# create subsample of 1000 for train, 1000 for test
set.seed(1)
ids.train <- sample(1:2000,1000)
dat.train <- dat2000[ids.train,]
dat.test <- dat2000[-ids.train,]
summary(dat.train)
stab.out <- stable(SUICTHNK ~., dat.train,
methods=c("rpart","ctreePrune","ctree"),n.rep=100,
samp.method="cv",tuneLength=c(15,3,3))
saveRDS(stab.out,"C:/Users/rjacobuc/Documents/GitHub/dtree_paper1/revision1/suicthink1.rds")
warnings()
stab.out
saveRDS(stab.out,"C:/Users/rjacobuc/Documents/GitHub/dtree_paper1/revision1/suicthink1.rds")
