{
    "collab_server" : "",
    "contents" : "#' Main function to calculate stability coefficients\n#'\n#' @param formula a formula, weight a response to left of ~.\n#' @param data Data frame to run models on\n#' @param methods Which tree methods to use. Defaults:\n#'        lm, rpart, tree, ctree, evtree. Also can use \"rf\" for random forests\n#' @param n.rep Number of times to replicate each method\n#' @param weights Optional weights for each case.\n#' @param perc.sub What fraction of data to put into train dataset. 1-frac.sub\n#'        is allocated to test dataset. Defaults to 0.75\n#' @param prune Whether to prune rpart tree\n#'\n#'\n#'\n#' @export\n\n\n\nstability = function(formula,\n                 data,\n                 methods=c(\"lm\",\"rpart\",\"tree\",\"ctree\",\"evtree\"),\n                 n.rep=100,\n                 weights,\n                 perc.sub=.75,\n                 prune=TRUE){\n\n  out <- list()\n  for(i in 1:n.rep){\n    out[[i]] <- dtree(formula,data,methods,weights,perc.sub,prune)$return.matrix\n  }\n\n\n\n  ret <- array(NA, dim=c(n.rep,length(methods),ncol(out[[1]])))\n\n  for(j in 1:n.rep){\n    ret[j,,] <- out[[j]]\n  }\n\n  ret.mean <- apply(ret,3,colMeans,na.rm=TRUE)\n  ret.var <- apply(ret,3,matrixStats::colVars,na.rm=TRUE)\n\n  row.names(ret.mean) <- methods\n  row.names(ret.var) <- methods\n\n  colnames(ret.mean) <- colnames(out[[i]])\n  colnames(ret.var) <- colnames(out[[i]])\n\n\n  res <- list()\n  res$means <- round(ret.mean,3)\n  res$variances <- round(ret.var,3)\n  res\n\n}\n",
    "created" : 1488821988103.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3382755846",
    "id" : "CF8A5541",
    "lastKnownWriteTime" : 1488821999,
    "last_content_update" : 1488821999212,
    "path" : "~/GitHub/dtree/R/stability.R",
    "project_path" : "R/stability.R",
    "properties" : {
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}