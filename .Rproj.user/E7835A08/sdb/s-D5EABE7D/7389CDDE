{
    "collab_server" : "",
    "contents" : "\nsim_regDat <- function(N,P,nonzero.num=NULL,beta.nonzero=NULL){\n\n\n  x=data.frame(matrix(rnorm(P*N),ncol=P))\n\n  if(is.null(nonzero.num)==TRUE){\n    beta <- rep(0,P)\n  }else{\n    beta <- c(beta.nonzero,rep(0,P-nonzero.num))\n  }\n\n  y <- as.matrix(x)%*%beta + rnorm(nrow(x),0,1)\n\n  return(data.frame(y,x))\n}\n\n\n\nlibrary(parallel)\n\n\n\n\n\n\n\nniter <- 100\nsamps <- c(100,500,2000)\nnpreds <- c(3,10,50)\n\ngrid <- expand.grid(samps=samps,npreds=npreds)\n\n\n\n\n\nno_cores <- detectCores() - 1\ncl <- makeCluster(no_cores)\nclusterExport(cl, c(\"sim_regDat\",\"grid\"))\n\n\n\npar.fun <- function(vec){\n  library(dtree)\n  dat <- sim_regDat(vec[\"samps\"],vec[\"npreds\"])\n  dat2 <- round(dat[,2:ncol(dat)],0)\n  dat3 <- data.frame(y=dat$y,dat2)\n  out = t(data.frame(dtree(y ~ .,dat3,methods=c(\"rpart\",\"ctree\",\"ctreePrune\",\"evtree\",\"bump\"),\n        samp.method=\"cv\",tuneLength=3,bump.rep=50,\n        subset=FALSE,perc.sub=.75,weights=NULL)$return.matrix[,\"nodes\"]))\n  out2 <- data.frame(out,vec[\"samps\"],vec[\"npreds\"])\n  colnames(out2) = c(c(\"rpart\",\"ctree\",\"ctreePrune\",\"evtree\",\"bump\"),\"samps\",\"npreds\")\n  rownames(out2) <- NULL\n  out2\n}\n\n\n\n",
    "created" : 1490807290973.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2013796408",
    "id" : "7389CDDE",
    "lastKnownWriteTime" : 1490814802,
    "last_content_update" : 1490814802287,
    "path" : "~/GitHub/diss_paper/analyses/null_sim.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 13,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}