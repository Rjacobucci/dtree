{
    "collab_server" : "",
    "contents" : "#install.packages(\"caret\");install.packages(\"randomForest\")\nlibrary(caret);library(randomForest)\n\n\n# read in data\n# need foreign package to read spss data files\n#install.packages(\"foreign\")\nlibrary(foreign)\n\n\n# Screener Database_Downloaded_11.2.16_OnlyNSSI for RF_Only RF Variables for Ross\ndat <- read.spss(file.choose(),to.data.frame=TRUE) \n# read in dataset. file.choose() replaces having to put in file location\n\n\nhead(dat) # first six rows\ndim(dat) #dimensions\n\ndat <- dat[complete.cases(dat),] # remove people with NA's. RF can't handle it\n\n# create new dataset removing not used variables\n# the numbers refer to the column numbers, and using - means not these columns\ndat2 <- dat[,-c(1)] # only exclude ID and Date\n\n\nplot(dat2$SuicideAttempt,dat2$ISAS_InterInfluence)\n\n#plot(dat2$SA,dat2$ISAS_InterInfluence)\n\n\n\nt.test(dat2$ISAS_InterInfluence ~ dat2$SuicideAttempt)\n\n\nplot(dat2$MedicalTx ~ dat2$SuicideAttempt)\n\naggregate(dat2$ISAS_InterInfluence, by = list(dat2$SuicideAttempt), FUN=mean)\n\naggregate(dat2$MedicalTx, by = list(dat2$SuicideAttempt), FUN=mean)\n\n\nset.seed(1) # make sure you get same train and test everytime run\nids <- sample(1:nrow(dat2),200) # randomly sample ids\ntrain <- dat2[ids,] # pull out random rows and assign to new dataset\ntest <- dat2[-ids,] # pull out all but previously selected rows\n\n\n\n\n\n############ remove demographics ##################33\n\nX <- train[,-c(59,60)]\nY <- train[,60] # SI\nY2 <- train[,59] # SA\n\n# same for test\nX.test <- test[,-c(59,60)]\nY.test <- test[,60] # SI\nY2.test <- test[,59] # SA\n\n\n\n\n########### predict SI ##################\n\n\nmod1 <- train(X,Y,method=\"rf\",importance=TRUE,ntree=2000,\n              trControl=trainControl(method=\"cv\"),tuneLength=5)\n\npred1 <- predict(mod1,X.test) # create predictions for test dataset\ncor(pred1,Y.test)**2 # get r-squared\n\n# plot the importance values for each predictor\n# it is scaled so the most important predictor has a value of 100\nvarImp(mod1)\nplot(varImp(mod1))\n\n\n\n########## DT #############3\n\nlibrary(evtree)\nev.out2 <- evtree(SuicidalIdeation ~ ., data=train)\nev.out2\nplot(ev.out2,type=\"simple\")\n\npred.ev1 <- predict(ev.out2,test)\ncor(pred.ev1,Y.test)**2 \n\n\n# SA\n\nmod3 <- train(X,Y2,method=\"rf\",importance=TRUE,tuneLength=5,ntree=2000,\n              trControl=trainControl(method=\"cv\"))#,classwt=c(.05,.95))\nmod3\npred3 <- predict(mod3,X.test) # create predictions for test dataset\nconfusionMatrix(pred3,Y2.test)\n\nplot(varImp(mod3))\n\n# probability predictions\npred33 <- predict(mod3,X.test,type=\"prob\")[,2] # create predictions for test dataset\n\nlibrary(pROC)\nrocCurve <- roc(Y2.test,pred33)\npROC::auc(rocCurve)\npROC::ci(rocCurve)\nplot(rocCurve)\n\n\n######### DT ############\n\n\ndt.sa <- train(X,Y2,method=\"rpart\",tuneLength=5,\n              trControl=trainControl(method=\"cv\"))#,classwt=c(.05,.95))\nplot(dt.sa$finalModel);text(dt.sa$finalModel)\n\n\nlibrary(evtree)\n\nev.out <- evtree(SuicideAttempt ~ ., data=train)\nev.out\nplot(ev.out,type=\"simple\")\n\npred.ev <- predict(ev.out,test) # create predictions for test dataset\nconfusionMatrix(pred.ev,Y2.test)\n\npred.dt <- predict(dt.sa,X.test) # create predictions for test dataset\nconfusionMatrix(pred.dt,Y2.test)\n\nplot(varImp(dt.sa))\n\n# probability predictions\npred.dt <- predict(dt.sa,X.test,type=\"prob\")[,2] \nrocCurve2 <- roc(Y2.test,pred.dt)\npROC::auc(rocCurve2)\npROC::ci(rocCurve2)\nplot(rocCurve2)\n\n########## lasso ############\n#library(lars);library(covTest)\n\n\n#set.seed(1)\n#a=lars(data.matrix(X),Y)\n#covTest(a,data.matrix(X),Y)\n\n########## too much collinearity ################\n\n\n\n#################################################\n\n########### elastic net ########################\n\n################################################\n\n\nlibrary(glmnet)\n\nset.seed(11)\nelas.out <- cv.glmnet(data.matrix(X),Y,alpha=0.5)\n\n\ncoef(elas.out,elas.out$lambda.1se)\n\n\n# re run for actual coefficients\ndat88 <- data.matrix(X[,c(\"NSSILikelihood\",\"ISAS_AntiSuicide\")])\ndat888 <- data.frame(dat88,Y)\n\nlm.out <- lm(Y ~ ., dat888)\nlibrary(QuantPsyc)\nlm.beta(lm.out)\nsummary(lm.out)\n\n# get test r-squared\ndat55 <- data.matrix(X.test[,c(\"NSSILikelihood\",\"ISAS_AntiSuicide\")])\ndat555 <- data.frame(dat55)\n\n\npred.lm <- predict(lm.out,dat555)\ncor(pred.lm,Y.test)**2\n\n\n######### SA ############3\n\n\nset.seed(11)\nelas.out2 <- cv.glmnet(data.matrix(X),Y2,alpha=0.5,family=\"binomial\")\n\n\ncoef(elas.out2,elas.out2$lambda.1se)\n\n\n# re run on train dataset\nxx <- data.frame(X[,c(\"Abdomen\", \"ISAS_AntiDissociation\", \"ISAS_AntiSuicide\",\n    \"MedicalTx\", \"ScarNumber\", \"q_dsh4_score\", \"q_dsh1_score\")])\nyy <- as.numeric(Y2) - 1\ndat11 <- data.frame(xx,yy)\nnames(dat11) <- c(\"Abdomen\", \"ISAS_AntiDissociation\", \"ISAS_AntiSuicide\",\n                  \"MedicalTx\", \"ScarNumber\", \"q_dsh4_score\", \"q_dsh1_score\",\"y\")\n\noutt9 <- glm(y ~ .,dat11,family=binomial)\nexp(coef(outt9))\n\nxxx = data.frame(X.test[,c(\"Abdomen\", \"ISAS_AntiDissociation\", \"ISAS_AntiSuicide\",\n                           \"MedicalTx\", \"ScarNumber\", \"q_dsh4_score\", \"q_dsh1_score\")])\nnames(xxx) <- c(\"Abdomen\", \"ISAS_AntiDissociation\", \"ISAS_AntiSuicide\",\n                \"MedicalTx\", \"ScarNumber\", \"q_dsh4_score\", \"q_dsh1_score\")\n\npreds <- predict(outt9,newdata=xxx,type=\"response\")\n\nlibrary(pROC)\nrocCurve <- roc(Y2.test,preds)\npROC::auc(rocCurve)\npROC::ci(rocCurve)\nplot(rocCurve)\n\n\n\n# get accuracy \n\npreds2 <- predict(outt9,newdata=xxx,type=\"response\")\n\nconfusionMatrix(round(preds2),as.numeric(Y2.test)-1)\n\n\n\n\n\n\n\n###########################################################\n\n########### Remove Anti-Suicide #############################\n\n############################################################\n\nX11 <- X\nX11.test <- X.test\n\nX11$ISAS_AntiSuicide <- NULL\nX11.test$ISAS_AntiSuicide <- NULL\n\n\nmod1.2 <- train(X11,Y,method=\"rf\",importance=TRUE,ntree=2000,\n              trControl=trainControl(method=\"cv\"),tuneLength=5)\n\npred1.2 <- predict(mod1.2,X11.test) # create predictions for test dataset\ncor(pred1.2,Y.test)**2 # get r-squared\n\n# plot the importance values for each predictor\n# it is scaled so the most important predictor has a value of 100\nvarImp(mod1.2)\nplot(varImp(mod1.2))\n\n\n\n\n# SA\n\nmod3.2 <- train(X11,Y2,method=\"rf\",importance=TRUE,tuneLength=5,ntree=2000,\n              trControl=trainControl(method=\"cv\"))#,classwt=c(.05,.95))\nmod3.2\npred3.2 <- predict(mod3.2,X11.test) # create predictions for test dataset\nconfusionMatrix(pred3.2,Y2.test)\n\nplot(varImp(mod3.2))\n\n# probability predictions\npred33 <- predict(mod3,X.test,type=\"prob\")[,2] # create predictions for test dataset\n\nlibrary(pROC)\nrocCurve <- roc(Y2.test,pred33)\npROC::auc(rocCurve)\npROC::ci(rocCurve)\nplot(rocCurve)\n\n\n\n\n\n\n\n\n\n\nset.seed(11)\nelas.out.2 <- cv.glmnet(data.matrix(X11),Y,alpha=0.5)\n\n\ncoef(elas.out.2,elas.out.2$lambda.1se)\n\n\n# re run for actual coefficients\ndat88 <- data.matrix(X[,c(\"q_nssi_wanttostop_score\",\"q_nssi_likelihood_score\",\"ISAS_AntiSuicide\")])\ndat888 <- data.frame(dat88,Y)\n\nlm.out <- lm(Y ~ ., dat888)\nlibrary(QuantPsyc)\nlm.beta(lm.out)\nsummary(lm.out)\n\n# get test r-squared\ndat55 <- data.matrix(X.test[,c(\"q_nssi_wanttostop_score\",\"q_nssi_likelihood_score\",\"ISAS_AntiSuicide\")])\ndat555 <- data.frame(dat55)\n\n\npred.lm <- predict(lm.out,dat555)\ncor(pred.lm,Y.test)**2\n\n\n######### SA ############3\n\n\nset.seed(11)\nelas.out2.2 <- cv.glmnet(data.matrix(X11),Y2,alpha=0.5,family=\"binomial\")\n\n\ncoef(elas.out2.2,elas.out2.2$lambda.1se)\n\n\n# re run on train dataset\nxx <- data.frame(X[,\"ISAS_AntiSuicide\"])\nyy <- as.numeric(Y2) - 1\ndat11 <- data.frame(xx,yy)\nnames(dat11) <- c(\"ISAS_AntiSuicide\",\"y\")\n\noutt9 <- glm(y ~ ISAS_AntiSuicide,dat11,family=binomial)\n\nxxx = data.frame(X.test[,\"ISAS_AntiSuicide\"])\nnames(xxx) <- \"ISAS_AntiSuicide\"\n\npreds <- predict(outt9,newdata=xxx,type=\"response\")\n\nlibrary(pROC)\nrocCurve <- roc(Y2.test,preds)\npROC::auc(rocCurve)\npROC::ci(rocCurve)\nplot(rocCurve)\n\n\n\n# get accuracy \n\npreds2 <- predict(outt9,newdata=xxx,type=\"response\")\n\nconfusionMatrix(round(preds2),as.numeric(Y2.test)-1)",
    "created" : 1482958396578.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2437189892",
    "id" : "275B215F",
    "lastKnownWriteTime" : 1481643323,
    "last_content_update" : 1481643323,
    "path" : "C:/Users/Ross/Dropbox/taylor_rf/round2/final_rf_elastic.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}