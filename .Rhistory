#####
names(swiss)[1] <- "y" #fertility
######
names(Default)[1] <- "y"
Default2 <- Default[1:2000,]
#####
data(Sacramento)
names(Sacramento)[7] <- "y"
Sacramento2 <- Sacramento[,-c(1,2,8:9)]
Sacramento2$y <- round(Sacramento2$y,-4)
Sacramento2$sqft <- round(Sacramento2$sqft,-2)
############ data
dat.list <- list(HS,FB2,bfi2,crabs2,eb2,Wage2,cats,Cars932,Boston,
birthwt2,biopsy2,College,quine,Pima.tr,OME3,nlschools2,minn382,
swiss,Default2,Sacramento2)
# problems with nlschools, error with minn382
res.out <- stable(y~., dat.list[[8]],
methods=c("rpart","ctreePrune","ctree"),n.rep=5,
samp.method="cv",tuneLength=c(15,3,3))#,parallel=TRUE,ncore=24)
res.out <- stable(y~., dat.list[[8]],
methods=c("rpart","ctreePrune","ctree"),n.rep=3,
samp.method="cv",tuneLength=c(15,3,3))#,parallel=TRUE,ncore=24)
library(dtree)
res.out <- stable(y~., dat.list[[8]],
methods=c("rpart","ctreePrune","ctree"),n.rep=3,
samp.method="cv",tuneLength=c(15,3,3))#,parallel=TRUE,ncore=24)
library(dtree)
library(dtree)
res.out <- stable(y~., dat.list[[8]],
methods=c("rpart","ctreePrune","ctree"),n.rep=3,
samp.method="cv",tuneLength=c(15,3,3))#,parallel=TRUE,ncore=24)
res.out
library(dtree)
res.out <- stable(y~., dat.list[[8]],
methods=c("rpart","ctreePrune","ctree"),n.rep=3,
samp.method="cv",tuneLength=c(15,3,3))#,parallel=TRUE,ncore=24)
res.out
library(dtree)
res.out <- stable(y~., dat.list[[8]],
methods=c("rpart","ctreePrune","ctree","evtree"),n.rep=100,
samp.method="cv",tuneLength=c(15,3,3,3))#,parallel=TRUE,ncore=24)
res.out
setwd("C:/Users/rjacobuc/Documents/GitHub/dtree_paper1/revision1/analysis_result")
saveRDS(res.out,file = paste0("chain00_",8,".rds"))
library(dtree)
library(rpart.plot)
ecls.1 = read.table('C:/Users/rjacobuc/Documents/GitHub/edm_book/ch5_trees/scripts/ecls_DM.dat', na='.');
ecls.1 = read.table('/Users/rjacobuc/Documents/GitHub/edm_book/ch5_trees/scripts/ecls_DM.dat', na='.');
names(ecls.1) = c('gender','kage',
'k_read_irt','k_read1','k_read2','k_read3','k_read4',
'k_print','k_read_tht',
'k_math_irt','k_math1','k_math2','k_math3','k_math4',
'k_math_tht',
'k_gk_irt','k_gk_tht',
'f_mtr','g_mtr',
'P1LEARN','P1CONTRO','P1SOCIAL','P1SADLON','P1IMPULS',
'ars_lit','ars_mth','ars_gk',
'T1LEARN','T1CONTRO','T1INTERP','T1EXTERN','T1INTERN',
'height','weight','bmi',
'hisp','na_amer','asian','black','pac_isl','white','m_race',
'ses_c','ses_cat','poor','income',
'g8_read','g8_read_tht','g8_math','g8_math_tht',
'g8_sci','g8_sci_tht')
head(ecls.1)
myvars = c('k_math_irt','g8_sci','k_gk_irt','weight','height','income','ses_c','g8_read')
ecls.2 = ecls.1[1:400,myvars]
colnames(ecls.2) <- c("math","science","knowledge",'weight','height','income','ses','read')
library(dtree)
stab.out <- stable(science ~., ecls.2,
methods=c("rpart","ctreePrune","ctree"),n.rep=10,
samp.method="cv",tuneLength=c(15,3,3))
stab.out <- stable(science ~., ecls.2,
methods=c("ctreePrune"),n.rep=10,
samp.method="cv",tuneLength=c(3))
dt.out <- dtree(science ~., ecls.2,
methods=c("ctreePrune"),
samp.method="cv",tuneLength=c(3))
dt.out
stab.out <- stable(science ~., ecls.2,
methods=c("ctreePrune"),n.rep=5,
samp.method="cv",tuneLength=c(3))
stab.out
library(rpart.plot)
ecls.1 = read.table('C:/Users/rjacobuc/Documents/GitHub/edm_book/ch5_trees/scripts/ecls_DM.dat', na='.');
ecls.1 = read.table('/Users/rjacobuc/Documents/GitHub/edm_book/ch5_trees/scripts/ecls_DM.dat', na='.');
names(ecls.1) = c('gender','kage',
'k_read_irt','k_read1','k_read2','k_read3','k_read4',
'k_print','k_read_tht',
'k_math_irt','k_math1','k_math2','k_math3','k_math4',
'k_math_tht',
'k_gk_irt','k_gk_tht',
'f_mtr','g_mtr',
'P1LEARN','P1CONTRO','P1SOCIAL','P1SADLON','P1IMPULS',
'ars_lit','ars_mth','ars_gk',
'T1LEARN','T1CONTRO','T1INTERP','T1EXTERN','T1INTERN',
'height','weight','bmi',
'hisp','na_amer','asian','black','pac_isl','white','m_race',
'ses_c','ses_cat','poor','income',
'g8_read','g8_read_tht','g8_math','g8_math_tht',
'g8_sci','g8_sci_tht')
head(ecls.1)
myvars = c('k_math_irt','g8_sci','k_gk_irt','weight','height','income','ses_c','g8_read')
ecls.2 = ecls.1[1:400,myvars]
colnames(ecls.2) <- c("math","science","knowledge",'weight','height','income','ses','read')
dt.out <- dtree(science ~., ecls.2,
methods=c("rpart","ctreePrune","ctree","evtree","rf"),
samp.method="cv",tuneLength=c(15,3,3,3,3))
dt.out
saveRDS(dt.out,"ecls1_dtree.rds")
dt.out1 <- dtree(science ~., ecls.2,
methods=c("lm"),
samp.method="cv")
dt.out1
dt.out
library(dtree)
setwd("C:/Users/rjacobuc/Desktop")
library(dtree)
library(foreign)
dat <- read.spss("36361-0001-Data.sav",to.data.frame=TRUE,use.value.labels=FALSE,reencode=FALSE)
vars <- c("ADWRDEPR","ADWRDISC","ADWRLSIN","ADWRPLSR","ADWRELES","ADWREMOR","ADWRGAIN",
"ADWRGROW","ADWRPREG","ADWRLOSE","ADWRDIET","ADWRSLEP","ADWRSMOR","ADWRENRG",
"ADWRSLOW","ADWRSLNO","ADWRJITT","ADWRJINO","ADWRTHOT","ADWRCONC","ADWRDCSN",
"ADWRNOGD","ADWRWRTH","ADPBINTF","ADRXHLP","ADTMTHLP","ADPBDLYA","ATXMDEYR","ARXMDEYR",
"AMDETXRX","ADOCMDE","AOMDMDE","APSY1MDE","ASOCMDE","ACOUNMDE","AOMHMDE","ANURSMDE","ARELMDE",
"AHBCHMDE","IRSEX","IRMARIT","CATAG6","NEWRACE2","SUICTHNK")
dat.sub <- dat[,vars]
#library(stringr)
#dat[,str_detect(colnames(dat), "SUI")]
# remove those with missing on suicide
dat.sub2 <- dat.sub[is.na(dat.sub$SUICTHNK)==FALSE & dat.sub$CATAG6 !=1,]
library(psych)
race <- dummy.code(dat.sub2$NEWRACE2)
race2 <- race[,2:7] # white as reference
colnames(race2) <- c("black","native","pac","asian","multi","hisp")
dat.sub3 <- data.frame(dat.sub2[,-43],race2)
dat.sub3$SUICTHNK <- (dat.sub3$SUICTHNK*-1)+2
# dummy code marriage
marr <- dummy.code(dat.sub3$IRMARIT)
marr2 <- marr[,2:4] # married as reference
colnames(marr2) <- c("marr2","marr3","marr4")
dat.sub4 <- data.frame(dat.sub3[,-41],marr2)
# dummy code cat -- age
catt <- dummy.code(dat.sub4$CATAG6)
catt2 <- catt[,2:5] # 12-17 as reference
colnames(catt2) <- c("age2","age3","age4","age5")
dat.sub5 <- data.frame(dat.sub4[,-41],catt2)
# recode missingness
dat.sub5$ADPBINTF[is.na(dat.sub5$ADPBINTF)] <- 0
dat.sub5$ADRXHLP[is.na(dat.sub5$ADRXHLP)] <- 0
dat.sub5$ADTMTHLP[is.na(dat.sub5$ADTMTHLP)] <- 0
dat.sub5$ADPBDLYA[is.na(dat.sub5$ADPBDLYA)] <- 5
dat.sub5[,1:23][is.na(dat.sub5[,1:23])] <- 2
dat.sub5[is.na(dat.sub5)] <- 0
# select for suicide to increase proportion
sel1 = which(dat.sub5$SUICTHNK == 1)
sel0 = which(dat.sub5$SUICTHNK == 0)
set.seed(1)
ids11 <- sample(sel1,1000)
ids10 <- sample(sel0,1000)
dat.sub11 <- dat.sub5[ids11,]
dat.sub10 <- dat.sub5[ids10,]
dat2000 <- rbind(dat.sub11,dat.sub10)
# recode variables
dat2000[,1:23] <- dat2000[,1:23] - 1
dat2000[,24:27] <- data.frame(scale(dat2000[,24:27]))
# create subsample of 1000 for train, 1000 for test
set.seed(1)
ids.train <- sample(1:2000,1000)
dat.train <- dat2000[ids.train,]
dat.test <- dat2000[-ids.train,]
summary(dat.train)
dat.train$SUICTHNK = as.factor(dat.train$SUICTHNK)
levels(dat.train$SUICTHNK) = c("no","yes")
library(dtree)
stab.out <- stable(SUICTHNK ~., dat.train,
methods=c("evtree"),n.rep=5,
samp.method="cv",tuneLength=c(3))
stab.out
stab.out <- stable(SUICTHNK ~., dat.train,
methods=c("evtree"),n.rep=15,
samp.method="cv",tuneLength=c(3))
stab.out
library(rpart);library(lavaan);library(party);library(evtree);library(rpart.plot)
HS <- HolzingerSwineford1939[,c(6:12)]
HS1 <- HS[1:100,]
HS2 <- HS[101:200,]
out <- rpart(grade ~ .,data=HS1,control=rpart.control(maxdepth=2))
rpart.plot(out,box.palette="white")
out2 <- rpart(grade ~ .,data=HS2,control=rpart.control(maxdepth=2))
rpart.plot(out2,box.palette="white")
out3 <- rpart(grade ~ .,data=HS,control=rpart.control(maxdepth=2))
rpart.plot(out3)
clusteval::cluster_similarity(out$where,
out2$where)
clusteval::cluster_similarity(out$where,
out3$where[1:100])
?sample
set.seed(i)
ids <- sample(nrow(data),nrow(data),replace=TRUE)
ids
unique(ids)
library(dtree)
setwd("C:/Users/rjacobuc/Desktop")
library(foreign)
dat <- read.spss("36361-0001-Data.sav",to.data.frame=TRUE,use.value.labels=FALSE,reencode=FALSE)
vars <- c("ADWRDEPR","ADWRDISC","ADWRLSIN","ADWRPLSR","ADWRELES","ADWREMOR","ADWRGAIN",
"ADWRGROW","ADWRPREG","ADWRLOSE","ADWRDIET","ADWRSLEP","ADWRSMOR","ADWRENRG",
"ADWRSLOW","ADWRSLNO","ADWRJITT","ADWRJINO","ADWRTHOT","ADWRCONC","ADWRDCSN",
"ADWRNOGD","ADWRWRTH","ADPBINTF","ADRXHLP","ADTMTHLP","ADPBDLYA","ATXMDEYR","ARXMDEYR",
"AMDETXRX","ADOCMDE","AOMDMDE","APSY1MDE","ASOCMDE","ACOUNMDE","AOMHMDE","ANURSMDE","ARELMDE",
"AHBCHMDE","IRSEX","IRMARIT","CATAG6","NEWRACE2","SUICTHNK")
dat.sub <- dat[,vars]
#library(stringr)
#dat[,str_detect(colnames(dat), "SUI")]
# remove those with missing on suicide
dat.sub2 <- dat.sub[is.na(dat.sub$SUICTHNK)==FALSE & dat.sub$CATAG6 !=1,]
library(psych)
race <- dummy.code(dat.sub2$NEWRACE2)
race2 <- race[,2:7] # white as reference
colnames(race2) <- c("black","native","pac","asian","multi","hisp")
dat.sub3 <- data.frame(dat.sub2[,-43],race2)
dat.sub3$SUICTHNK <- (dat.sub3$SUICTHNK*-1)+2
# dummy code marriage
marr <- dummy.code(dat.sub3$IRMARIT)
marr2 <- marr[,2:4] # married as reference
colnames(marr2) <- c("marr2","marr3","marr4")
dat.sub4 <- data.frame(dat.sub3[,-41],marr2)
# dummy code cat -- age
catt <- dummy.code(dat.sub4$CATAG6)
catt2 <- catt[,2:5] # 12-17 as reference
colnames(catt2) <- c("age2","age3","age4","age5")
dat.sub5 <- data.frame(dat.sub4[,-41],catt2)
# recode missingness
dat.sub5$ADPBINTF[is.na(dat.sub5$ADPBINTF)] <- 0
dat.sub5$ADRXHLP[is.na(dat.sub5$ADRXHLP)] <- 0
dat.sub5$ADTMTHLP[is.na(dat.sub5$ADTMTHLP)] <- 0
dat.sub5$ADPBDLYA[is.na(dat.sub5$ADPBDLYA)] <- 5
dat.sub5[,1:23][is.na(dat.sub5[,1:23])] <- 2
dat.sub5[is.na(dat.sub5)] <- 0
# select for suicide to increase proportion
sel1 = which(dat.sub5$SUICTHNK == 1)
sel0 = which(dat.sub5$SUICTHNK == 0)
set.seed(1)
ids11 <- sample(sel1,1000)
ids10 <- sample(sel0,1000)
dat.sub11 <- dat.sub5[ids11,]
dat.sub10 <- dat.sub5[ids10,]
dat2000 <- rbind(dat.sub11,dat.sub10)
# recode variables
dat2000[,1:23] <- dat2000[,1:23] - 1
dat2000[,24:27] <- data.frame(scale(dat2000[,24:27]))
# create subsample of 1000 for train, 1000 for test
set.seed(1)
ids.train <- sample(1:2000,1000)
dat.train <- dat2000[ids.train,]
dat.test <- dat2000[-ids.train,]
summary(dat.train)
library(dtree)
setwd("C:/Users/rjacobuc/Desktop")
library(foreign)
dat <- read.spss("36361-0001-Data.sav",to.data.frame=TRUE,use.value.labels=FALSE,reencode=FALSE)
vars <- c("ADWRDEPR","ADWRDISC","ADWRLSIN","ADWRPLSR","ADWRELES","ADWREMOR","ADWRGAIN",
"ADWRGROW","ADWRPREG","ADWRLOSE","ADWRDIET","ADWRSLEP","ADWRSMOR","ADWRENRG",
"ADWRSLOW","ADWRSLNO","ADWRJITT","ADWRJINO","ADWRTHOT","ADWRCONC","ADWRDCSN",
"ADWRNOGD","ADWRWRTH","ADPBINTF","ADRXHLP","ADTMTHLP","ADPBDLYA","ATXMDEYR","ARXMDEYR",
"AMDETXRX","ADOCMDE","AOMDMDE","APSY1MDE","ASOCMDE","ACOUNMDE","AOMHMDE","ANURSMDE","ARELMDE",
"AHBCHMDE","IRSEX","IRMARIT","CATAG6","NEWRACE2","SUICTHNK")
dat.sub <- dat[,vars]
#library(stringr)
#dat[,str_detect(colnames(dat), "SUI")]
# remove those with missing on suicide
dat.sub2 <- dat.sub[is.na(dat.sub$SUICTHNK)==FALSE & dat.sub$CATAG6 !=1,]
library(psych)
race <- dummy.code(dat.sub2$NEWRACE2)
race2 <- race[,2:7] # white as reference
colnames(race2) <- c("black","native","pac","asian","multi","hisp")
dat.sub3 <- data.frame(dat.sub2[,-43],race2)
dat.sub3$SUICTHNK <- (dat.sub3$SUICTHNK*-1)+2
# dummy code marriage
marr <- dummy.code(dat.sub3$IRMARIT)
marr2 <- marr[,2:4] # married as reference
colnames(marr2) <- c("marr2","marr3","marr4")
dat.sub4 <- data.frame(dat.sub3[,-41],marr2)
# dummy code cat -- age
catt <- dummy.code(dat.sub4$CATAG6)
catt2 <- catt[,2:5] # 12-17 as reference
colnames(catt2) <- c("age2","age3","age4","age5")
dat.sub5 <- data.frame(dat.sub4[,-41],catt2)
# recode missingness
dat.sub5$ADPBINTF[is.na(dat.sub5$ADPBINTF)] <- 0
dat.sub5$ADRXHLP[is.na(dat.sub5$ADRXHLP)] <- 0
dat.sub5$ADTMTHLP[is.na(dat.sub5$ADTMTHLP)] <- 0
dat.sub5$ADPBDLYA[is.na(dat.sub5$ADPBDLYA)] <- 5
dat.sub5[,1:23][is.na(dat.sub5[,1:23])] <- 2
dat.sub5[is.na(dat.sub5)] <- 0
# select for suicide to increase proportion
sel1 = which(dat.sub5$SUICTHNK == 1)
sel0 = which(dat.sub5$SUICTHNK == 0)
set.seed(1)
ids11 <- sample(sel1,1000)
ids10 <- sample(sel0,1000)
dat.sub11 <- dat.sub5[ids11,]
dat.sub10 <- dat.sub5[ids10,]
dat2000 <- rbind(dat.sub11,dat.sub10)
# recode variables
dat2000[,1:23] <- dat2000[,1:23] - 1
dat2000[,24:27] <- data.frame(scale(dat2000[,24:27]))
# create subsample of 1000 for train, 1000 for test
set.seed(1)
ids.train <- sample(1:2000,1000)
dat.train <- dat2000[ids.train,]
dat.test <- dat2000[-ids.train,]
summary(dat.train)
library(dtree)
dat.train$SUICTHNK = as.factor(dat.train$SUICTHNK)
levels(dat.train$SUICTHNK) = c("no","yes")
stab.out <- stable(SUICTHNK ~., dat.train,
methods=c("rpart","ctreePrune","ctree"),n.rep=5,
samp.method="cv",tuneLength=c(15,3,3))
library(MASS)
data(Boston)
stab.out <- stable(formula=medv ~.,data=Boston,
methods=c("ctreePrune"),samp.method="cv",
tuneLength=c(3), n.rep=20, parallel=TRUE)
stab.out <- stable(formula=medv ~.,data=Boston[1:100],
methods=c("ctreePrune"),samp.method="cv",
tuneLength=c(3), n.rep=20, parallel=TRUE)
stab.out <- stable(formula=medv ~.,data=Boston[1:100,],
methods=c("ctreePrune"),samp.method="cv",
tuneLength=c(3), n.rep=20, parallel=TRUE)
stab.out
stab.out <- stable(SUICTHNK ~., dat.train,
methods=c("rpart","ctreePrune","ctree"),n.rep=5,
samp.method="cv",tuneLength=c(15,3,3))
stab.out <- stable(SUICTHNK ~., dat.train,
methods=c("rpart","ctreePrune","ctree"),n.rep=5,
samp.method="cv",tuneLength=c(15,3,3),parallel=T)
stab.out
head(Boston)
stab.out <- stable(formula=medv ~rad,data=Boston[1:100,],
methods=c("ctreePrune"),samp.method="cv",
tuneLength=c(3), n.rep=20, parallel=TRUE)
stab.out
stab.out <- stable(formula=medv ~rad,data=Boston[1:100,],
methods=c("ctreePrune"),samp.method="cv",
tuneLength=c(1), n.rep=20, parallel=TRUE)
stab.out
?clusteval
?cluster_similarity
clusteval::cluster_similarity(out$where,
out3$where[1:100])
out$where
out3$where[1:100]
clusteval::cluster_similarity(out$where,
out3$where[1:100]-1)
clusteval::cluster_similarity(out$where,
out3$where[1:100]-10)
out3$where[1:100]-10
clusteval::cluster_similarity(out$where,
out3$where[1:100])
out3$where[1:100]
out$where
clusteval::cluster_similarity(out$where,
out3$where[1:100]-2)
rank(out$where)
order(out$where)
ids
ids == uni
ids <- sample(nrow(data),nrow(data),replace=TRUE)
uni = unique(ids)
ids == uni
any(ids == uni)
uni
ids <- sample(nrow(HS),nrow(HS),replace=TRUE)
ids
uni = unique(ids)
uni
boot = HS[ids,]
summary(boot)
summary(HS[uni,])
summary(boot[uni,])
summary(HS[uni,])
uni
which(boot == HS[ids,])
row.match(boot == HS[ids,])
library(prodlim)
row.match(boot == HS[ids,])
?row.match
row.match(boot,HS[ids,])
tt = row.match(boot,HS[ids,])
tt = row.match(boot,HS)
tt
tt = row.match(boot[uni,],HS)
tt
summary(boot[uni,])
summary(HS[tt,])
library(dtree)
stab.out <- stable(formula=medv ~rad,data=Boston[1:100,],
methods=c("ctreePrune"),samp.method="cv",
tuneLength=c(1), n.rep=20, parallel=TRUE)
stab.out
stab.out <- stable(formula=medv ~rad,data=Boston[1:100,],
methods=c("rpart"),samp.method="cv",
tuneLength=c(1), n.rep=20, parallel=TRUE)
stab.out
stab.out <- stable(SUICTHNK ~., dat.train,
methods=c("rpart","ctreePrune","ctree"),n.rep=5,
samp.method="cv",tuneLength=c(15,3,3),parallel=T)
stab.out
library(dtree)
stab.out <- stable(SUICTHNK ~., dat.train,
methods=c("ctree"),n.rep=2,
samp.method="cv",tuneLength=c(3),parallel=F)
library(dtree)
stab.out <- stable(SUICTHNK ~., dat.train,
methods=c("ctree"),n.rep=2,
samp.method="cv",tuneLength=c(3),parallel=F)
library(dtree)
library(dtree)
library(dtree)
st.out = stable(grade ~ ., data=HS,methods=c("rpart","ctree","ctreePrune"),n.rep=10,
samp.method="cv",tuneLength=c(15,3,3),parallel=F)
st.out = stable(grade ~ ., data=HS[complete.cases(HS),],methods=c("rpart","ctree","ctreePrune"),n.rep=10,
samp.method="cv",tuneLength=c(15,3,3),parallel=F)
st.out
library(dtree)
library(dtree)
library(dtree)
dat = read.csv(file="C:/Users/rjacobuc/Documents/github/dtree_paper1/adams_demo.csv")
library(dtree)
dat$R6PROXY <- NULL
out.dtree <- dtree(diag ~ ., dat,methods=c("lm","rpart","ctreePrune","ctree","evtree","rf"),tuneLength=c(1,15,3,3,3,3))
summary(out.dtree)
setwd("C:/Users/rjacobuc/Documents/GitHub/dtree_paper1/revision1")
saveRDS(out.dtree,"out_dtree_hrs3.rds")
varImp(out.dtree$rf.out)
plot(varImp(out.dtree$rf.out))
out.dtree$rf.out
varImp(out.dtree$rf.out)
vv = varImp(out.dtree$rf.out)
plot(vv)
library(party)
plot(vv)
vv = varimp(out.dtree$rf.out)
str(out.dtree$rf.out)
summary(out.dtree$rf.out)
summary(out.dtree$rf.train)
library(dtree)
out.cf <- dtree(diag ~ ., dat,methods=c("rf"),tuneLength=c(1))
summary(out.cf$rf.out)
data(Boston)
dt.out <- dtree(formula=medv ~.,data=Boston[1:100,],tuneLength=1,
methods=c("rf"))
summary(dt.out$rf.out)
varImp(dt.out$rf.out)
plot(varImp(dt.out$rf.out))
plot(varimp(dt.out$rf.out))
library(party)
plot(varimp(dt.out$rf.out))
varimp(dt.out$rf.out)
dt.out <- dtree(formula=medv ~.,data=Boston[1:100,],tuneLength=1,
methods=c("rf"))
summary(dt.out$rf.out)
dt.out$rf.out
plot(varimp(dt.out$rf.out))
plot(varImp(dt.out$rf.out))
cc <- train(formula=medv ~.,data=Boston[1:100,],tuneLength=1,
method="cforest")
warnings()
cc <- train(medv ~.,data=Boston[1:100,],tuneLength=1,
method="cforest")
varimp(cc)
plot(cc)
cc
varImp(cc)
plot(varImp(cc))
plot(varImp(dt.out$rf.train))
out.cf <- dtree(diag ~ ., dat,methods=c("rf"),tuneLength=c(3))
plot(varImp(out.cf$rf.train))
plot(as.party(out.dtree$rpart.out))
setwd("C:/Users/rjacobuc/Documents/GitHub/dtree_paper1/revision1")
saveRDS(out.dtree,"out_dtree_hrs3.rds")
out.stable <- stable(diag~., dat,methods=c("rpart","ctreePrune","ctree","evtree"),tuneLength=c(15,3,3,3),parallel=F)
library(rpart.plot)
ecls.1 = read.table('C:/Users/rjacobuc/Documents/GitHub/edm_book/ch5_trees/scripts/ecls_DM.dat', na='.');
ecls.1 = read.table('/Users/rjacobuc/Documents/GitHub/edm_book/ch5_trees/scripts/ecls_DM.dat', na='.');
names(ecls.1) = c('gender','kage',
'k_read_irt','k_read1','k_read2','k_read3','k_read4',
'k_print','k_read_tht',
'k_math_irt','k_math1','k_math2','k_math3','k_math4',
'k_math_tht',
'k_gk_irt','k_gk_tht',
'f_mtr','g_mtr',
'P1LEARN','P1CONTRO','P1SOCIAL','P1SADLON','P1IMPULS',
'ars_lit','ars_mth','ars_gk',
'T1LEARN','T1CONTRO','T1INTERP','T1EXTERN','T1INTERN',
'height','weight','bmi',
'hisp','na_amer','asian','black','pac_isl','white','m_race',
'ses_c','ses_cat','poor','income',
'g8_read','g8_read_tht','g8_math','g8_math_tht',
'g8_sci','g8_sci_tht')
head(ecls.1)
myvars = c('k_math_irt','g8_sci','k_gk_irt','weight','height','income','ses_c','g8_read')
ecls.2 = ecls.1[1:1000,myvars]
colnames(ecls.2) <- c("math","science","knowledge",'weight','height','income','ses','read')
library(dtree)
stab.out <- stable(science ~., ecls.2,
methods=c("rpart","ctreePrune","ctree"),
samp.method="cv",tuneLength=c(15,3,3,3))
saveRDS(stab.out,"C:/Users/rjacobuc/Documents/GitHub/dtree_paper1/revision1/ecls1_stab1.rds")
stab.out
library(dtree)
