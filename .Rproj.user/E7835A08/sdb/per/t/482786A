{
    "collab_server" : "",
    "contents" : "\nctree_ret <- function(formula, data.train, data.test,class.response, response){\n\nret <- list()\n\nreturn.matrix <- matrix(NA,1,8)\ncolnames(return.matrix) <- c(\"nodes\",\"nvar\",\"nsplits\",\"misfit.cv\",\"misfit.train\",\"rsq.train\",\"misfit.test\",\"rsq.test\")\n\nctree.out <- ctree(formula,data.train)\n\n\n#min.error <- which(min(cp[,\"xerror\"]) == cp[,\"xerror\"])[1]\n\nnodes <- ctree.out@get_where()\nreturn.matrix[1,\"nsplits\"] <- max(nodes) - length(unique(nodes))\n#return.matrix[1,\"fit.cv\"] <- cp[min.error,\"xerror\"]\n\npreds <- predict(ctree.out)\n\n\n\n#depth(ctree.out$node)\n\n\nnode.try <- subset(1:max(nodes), !(1:max(nodes) %in% unique(nodes)))\n\nvar.name <- rep(NA,length(node.try))\nfor(i in 1:length(var.name)){\n  var.name[i] <- nodes(ctree.out,node.try[i])[[1]]$psplit$variableName\n}\n\n\n\nreturn.matrix[1,\"nvar\"] <- length(unique(var.name))\n\nreturn.matrix[1,\"nodes\"] <- length(unique(nodes))\n\n\n\nif(class.response == \"numeric\" | class.response == \"integer\"){\n\n  return.matrix[1,\"misfit.train\"] <- mean((data.train[,response] - predict(ctree.out))^2)/nrow(data.train)\n  return.matrix[1,\"misfit.test\"] <- mean((data.test[,response] -\n                                            predict(ctree.out,data.test))^2)/nrow(data.test)\n  return.matrix[1,\"rsq.train\"] <- (cor(data.train[,response],predict(ctree.out)))**2\n  return.matrix[1,\"rsq.test\"] <- (cor(data.test[,response],predict(ctree.out,data.test)))**2\n}else{\n  return.matrix[1,\"misfit.train\"] <- NA\n  return.matrix[1,\"misfit.test\"] <- NA\n}\n\n\nret$vec <- return.matrix\nret$ctree.ret <- ctree.out\nreturn(ret)\n\n}\n",
    "created" : 1482431187976.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "805578887",
    "id" : "482786A",
    "lastKnownWriteTime" : 1482442224,
    "last_content_update" : 1482442224039,
    "path" : "~/GitHub/dtree/R/ctree_ret.R",
    "project_path" : "R/ctree_ret.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}