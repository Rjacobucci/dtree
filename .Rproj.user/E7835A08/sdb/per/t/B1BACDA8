{
    "collab_server" : "",
    "contents" : "\nevtree_ret <- function(formula, data.train, data.test,class.response, response){\n\nret <- list()\n\nreturn.matrix <- matrix(NA,1,8)\ncolnames(return.matrix) <- c(\"nodes\",\"nvar\",\"nsplits\",\"misfit.cv\",\"misfit.train\",\"rsq.train\",\"misfit.test\",\"rsq.test\")\n\nevtree.out <- evtree(formula,data.train)\n\n\n\n\n#min.error <- which(min(cp[,\"xerror\"]) == cp[,\"xerror\"])[1]\nreturn.matrix[1,\"nsplits\"] <- max(fitted(evtree.out)[,1]) - length(unique(fitted(evtree.out)[,1]))\n#return.matrix[1,\"fit.cv\"] <- cp[min.error,\"xerror\"]\n\n\n\n#depth(evtree.out$node)\n\nret.obj <- as.list(evtree.out$node)\nlen <- length(ret.obj)\n\nvars <- rep(NA,len)\nfor(i in 1:len){\n\n  if(is.null(ret.obj[[i]]$split$varid)==FALSE){\n    vars[i] <- ret.obj[[i]]$split$varid\n  }else{\n    vars[i] <- NA\n  }\n}\n\nvars2 <- vars[is.na(vars)==FALSE]\nvars3 <- length(unique(vars2))\n\n\n#attributes(evtree.out)\n\n\nreturn.matrix[1,\"nvar\"] <- vars3\n\nreturn.matrix[1,\"nodes\"] <- length(unique(fitted(evtree.out)[,1]))\n\n\n\nif(class.response == \"numeric\" | class.response == \"integer\"){\n\n  return.matrix[1,\"misfit.train\"] <- mean((data.train[,response] - predict(evtree.out))^2)/nrow(data.train)\n  return.matrix[1,\"misfit.test\"] <- mean((data.test[,response] -\n                                         predict(evtree.out,data.test))^2)/nrow(data.test)\n  return.matrix[1,\"rsq.train\"] <- (cor(data.train[,response],predict(evtree.out)))**2\n  return.matrix[1,\"rsq.test\"] <- (cor(data.test[,response],predict(evtree.out,data.test)))**2\n}else{\n  return.matrix[1,\"misfit.train\"] <- NA\n  return.matrix[1,\"misfit.test\"] <- NA\n}\n\n\nret$vec <- return.matrix\nret$evtree.ret <- evtree.out\nreturn(ret)\n\n}\n",
    "created" : 1482441322010.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1145436526",
    "id" : "B1BACDA8",
    "lastKnownWriteTime" : 1482442286,
    "last_content_update" : 1482442286459,
    "path" : "~/GitHub/dtree/R/evtree_ret.R",
    "project_path" : "R/evtree_ret.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}