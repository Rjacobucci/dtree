{
    "collab_server" : "",
    "contents" : "library(glmnet);library(covTest);library(MASS)\nlibrary(dplyr);library(reshape2);library(data.table)\nlibrary(ncvreg) # mcp and scad\nlibrary(parcor) # adalasso\nlibrary(spikeslab) # spike slab\n# selo need to load extra code\n\nNs <- c(40,60,100,500)\ncond <- c(1,2,3)\ncount <- 0\nniter=200\ntype1.res <- matrix(NA,niter*length(Ns)*length(cond),15)\ntype2.res <- matrix(NA,niter*length(Ns)*length(cond),15)\n\n\n\n\n\n\nfor(i in 1:niter){\n  for(j in 1:length(Ns)){\n    for(k in 1:length(cond)){\n  \n      count <- count + 1\n\nM <- 31\nN <- Ns[j]\ndat <- data.frame(matrix(rnorm(N*M,mean=0,sd=1), N, M))\n\ncolnames(dat) <- c(\"y\",\"x1\",\"x2\",\"x3\",\"x4\",\"x5\",\n                   \"x6\",\"x7\",\"x8\",\"x9\",\"x10\",\n                   \"x11\",\"x12\",\"x13\",\"x14\",\"x15\",\n                   \"x16\",\"x17\",\"x18\",\"x19\",\"x20\",\n                   \"x21\",\"x22\",\"x23\",\"x24\",\"x25\",\n                   \"x26\",\"x27\",\"x28\",\"x29\",\"x30\")\n\nu <- rnorm(N)\nr1 <- r2 <- r3 <- r4 <- r5 <- r6 <- 0\n\nif(cond[k] == 1){\n  r1 <- 0.3\n  vars <- 1:5\n}else if(cond[k] == 2){\n  r1 <- 1\n  vars <- 1:5\n}else if(cond[k] == 3){\n  r1 <- 1\n  r2 <- 0.15\n  vars <- c(1:10)\n}\n\ncomb <- c(rep(r1,5),rep(r2,5),rep(r3,5),rep(r4,5),rep(r5,5),rep(r6,5))\n\ndat$y <- r1*dat$x1 + r1*dat$x2 + r1*dat$x3 + r1*dat$x4 + r1*dat$x5 + \n     r2*dat$x6 + r2*dat$x7 + r2*dat$x8 + r2*dat$x9 + r2*dat$x10 + \n     r3*dat$x11 + r3*dat$x12 + r3*dat$x13 + r3*dat$x14 + r3*dat$x15 + \n     r4*dat$x16 + r4*dat$x17 + r4*dat$x18 + r4*dat$x19 + r4*dat$x20 + \n     r5*dat$x21 + r5*dat$x22 + r5*dat$x23 + r5*dat$x24 + r5*dat$x25 + \n     r6*dat$x26 + r6*dat$x27 + r6*dat$x28 + r6*dat$x29 + r6*dat$x30 +\n     u\n\n\n\nout <- lm(y ~ ., dat)\np_s <- summary(out)$coefficients[,\"Pr(>|t|)\"] < 0.05\np_s <- p_s[-1]\n\ntype1.1 <- sum((p_s == TRUE) & (comb == 0))\ntype2.1 <- sum((p_s == FALSE) & (comb != 0))\n\n# bonferroni correction\n\np_s2 <- summary(out)$coefficients[,\"Pr(>|t|)\"] < 0.0017083\np_s2 <- p_s2[-1]\n\ntype1.2 <- sum((p_s2 == TRUE) & (comb == 0))\ntype2.2 <- sum((p_s2 == FALSE) & (comb != 0))\n\n# lasso\n\nx <- data.matrix(dat[,2:31]); y <- data.matrix(dat[,1])\nlasso <- cv.glmnet(x,y,intercept=FALSE)\n\nlambda1 <- lasso$lambda.min\nlambda2 <- lasso$lambda.1se\n\nlam.coef1 <- coef(lasso,lambda1) == 0\nlam.coef2 <- coef(lasso,lambda2) == 0\n\nlam.coef1 <- lam.coef1@x[2:31]\nlam.coef2 <- lam.coef2@x[2:31]\n\n#nwrong2 <- 30 - sum(lam.coef1 == c(comb == 0))\n#nwrong3 <- 30 - sum(lam.coef2 == c(comb == 0))\n\ntype1.3 <- sum((lam.coef1 == FALSE) & (comb == 0))\ntype2.3 <- sum((lam.coef1 == TRUE) & (comb != 0))\n\ntype1.4 <- sum((lam.coef2 == FALSE) & (comb == 0))\ntype2.4 <- sum((lam.coef2 == TRUE) & (comb != 0))\n\n\n# covTest\n\n\na=lars(x,y,intercept=FALSE)\ncov.out <- covTest(a,x,y)\nres1 <- cov.out$results\n\nval <- 1:30 %in% res1[,1]\n\nif(any(val == FALSE)){\n  type1.5 <- type1.6 <- type2.5 <- type2.6 <- NA\n}else{\n  p_s3 <- cov.out$results[,\"P-value\"] < 0.05\n  \n  \n  type1.5 <- sum((p_s3 == TRUE) & (comb[res1[,1]] == 0))\n  type2.5 <- sum((p_s3 == FALSE) & (comb[res1[,1]] != 0))\n  \n  # bonferroni correction\n  \n  p_s4 <- cov.out$results[,\"P-value\"] < 0.0017083\n  \n  \n  type1.6 <- sum((p_s4 == TRUE) & (comb[res1[,1]] == 0))\n  type2.6 <- sum((p_s4 == FALSE) & (comb[res1[,1]] != 0))\n}\n\n\n# stepwise selection\n\nstep.out <- stepAIC(out,direction=\"both\",trace=0)\n\n#p_s5 <- summary(step.out)$coefficients[,\"Pr(>|t|)\"] < 0.05\n#p_s5 <- p_s5[-1]\n\nvariables <- rownames(summary(step.out)$coefficients)[-1]\n\ninds <- as.numeric(gsub(\"x\",\"\",variables))\n\ninds2 <- !(1:30 %in% inds)\ninds3 <- (1:30)[inds2]\n\ntype1.7 <- sum(inds %in% which(comb==0))\ntype2.7 <- sum(inds3 %in% which(comb!=0))\n\n# bonferroni correction\n\n#p_s6 <- summary(step.out)$coefficients[,\"Pr(>|t|)\"] < 0.0017083\n#p_s6 <- p_s6[-1]\n\n#type1.8 <- sum((p_s6 == TRUE) & (comb[inds] == 0))\n#type2.8 <- sum((p_s6 == FALSE) & (comb[inds] != 0))\n\n# scad\n\nout.ncv1 <- cv.ncvreg(dat[,2:31],dat[,1],penalty=\"SCAD\")\ncoef9 <- coef(out.ncv1)[-1] == 0\n\n\ntype1.9 <- sum((coef9 == FALSE) & (comb == 0))\ntype2.9 <- sum((coef9 == TRUE) & (comb != 0))\n\n\n# mcp\n\nout.ncv2 <- cv.ncvreg(dat[,2:31],dat[,1])\ncoef10 <- coef(out.ncv2)[-1] == 0\n\n\ntype1.10 <- sum((coef10 == FALSE) & (comb == 0))\ntype2.10 <- sum((coef10 == TRUE) & (comb != 0))\n\n\n# lasso from ncvreg\n\nout.ncv3 <- cv.ncvreg(dat[,2:31],dat[,1],penalty=\"lasso\")\ncoef11 <- coef(out.ncv3)[-1] == 0\n\n\ntype1.11 <- sum((coef11 == FALSE) & (comb == 0))\ntype2.11 <- sum((coef11 == TRUE) & (comb != 0))\n\n# spike slab\n\nspike.out <- spikeslab(y ~ ., data=dat)\ncoef12 <- spike.out$gnet == 0\n\ntype1.12 <- sum((coef12 == FALSE) & (comb == 0))\ntype2.12 <- sum((coef12 == TRUE) & (comb != 0))\n\n# alasso\n\nout.alasso <- adalasso(as.matrix(dat[,2:31]),dat[,1])\ncoef13 <- out.alasso$coefficients.adalasso == 0\n\ntype1.13 <- sum((coef13 == FALSE) & (comb == 0))\ntype2.13 <- sum((coef13 == TRUE) & (comb != 0))\n\n# lasso from parcor package\n\ncoef14 <- out.alasso$coefficients.lasso == 0\n\ntype1.14 <- sum((coef14 == FALSE) & (comb == 0))\ntype2.14 <- sum((coef14 == TRUE) & (comb != 0))\n\n\n###############################\n\n####### results ################\n\n###############################\n\n\ntype1.res[count,] <- c(N,k,type1.1,type1.2,type1.3,type1.4,type1.5,type1.6,type1.7,\n                       type1.9,type1.10,type1.11,type1.12,type1.13,type1.14)\ntype2.res[count,] <- c(N,k,type2.1,type2.2,type2.3,type2.4,type2.5,type2.6,type2.7,\n                       type2.9,type2.10,type2.11,type2.12,type2.13,type2.14)\n\n\n\nrm(\"x\");rm(\"y\");rm(\"dat\")\nprint((count/c(niter*length(Ns)*length(cond)))*100)\n    }\n  }\n}\n\ntype1.res2 <- type1.res\ntype2.res2 <- type2.res\ntype1.res2 <- data.frame(type1.res2)\ntype2.res2 <- data.frame(type2.res2)\nnames(type1.res2) <- c(\"N\",\"mod\",\"lmP\",\"lmPbonf\",\"lassoMin\",\"lasso1SE\",\"lassoP\",\"lassoPbonf\",\"stepP\",\n                       \"scad\",\"mcp\",\"ncv.lasso\",\"spike\",\"alasso\",\"parcor.lasso\")\nnames(type2.res2) <- c(\"N\",\"mod\",\"lmP\",\"lmPbonf\",\"lassoMin\",\"lasso1SE\",\"lassoP\",\"lassoPbonf\",\"stepP\",\n                       \"scad\",\"mcp\",\"ncv.lasso\",\"spike\",\"alasso\",\"parcor.lasso\")\n\n\nlibrary(data.table)\nDT <- data.table(type1.res2)\n\n(DT[, lapply(.SD, mean), by = N])\n(DT[, lapply(.SD, mean), by = mod])\n\nDT2 <- data.table(type2.res2)\n(DT2[, lapply(.SD, mean), by = N])\n(DT2[, lapply(.SD, mean), by = mod])\n\nlibrary(ggplot2)\nqplot(x=lassoP,data=DT)\n\nggplot(type1.res, aes(N, fill=workshop ) ) +\n  geom_bar(position=\"dodge\")\n\n\nsave.image(\"regression_save2.Rdata\")\n",
    "created" : 1482419751914.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "55772284",
    "id" : "6E645F92",
    "lastKnownWriteTime" : 1481642567,
    "last_content_update" : 1481642567,
    "path" : "~/GitHub/regression_reg_sim/sim_v1.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}